// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WashUpAPIFix;

#nullable disable

namespace WashUpAPIFix.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607082559_RemoveLaundryServiceIdFromLaundryOrder")]
    partial class RemoveLaundryServiceIdFromLaundryOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WashUpAPIFix.Models.LaundryOrder", b =>
                {
                    b.Property<int>("LaundryOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("laundryorderid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LaundryOrderId"));

                    b.Property<int?>("CourierId")
                        .HasColumnType("integer")
                        .HasColumnName("courierid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<int>("LaundryServiceId")
                        .HasColumnType("integer")
                        .HasColumnName("laundryserviceid");

                    b.Property<string>("PickupAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("pickupaddress");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("LaundryOrderId");

                    b.HasIndex("CourierId");

                    b.HasIndex("LaundryServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("laundryorders", (string)null);
                });

            modelBuilder.Entity("WashUpAPIFix.Models.LaundryService", b =>
                {
                    b.Property<int>("LaundryServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("laundryserviceid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LaundryServiceId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("LaundryServiceId");

                    b.ToTable("laundryservices", (string)null);
                });

            modelBuilder.Entity("WashUpAPIFix.Models.OrderDetail", b =>
                {
                    b.Property<int>("LaundryOrderId")
                        .HasColumnType("integer")
                        .HasColumnName("laundryorderid");

                    b.Property<int>("LaundryServiceId")
                        .HasColumnType("integer")
                        .HasColumnName("laundryserviceid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("subtotal");

                    b.HasKey("LaundryOrderId", "LaundryServiceId");

                    b.HasIndex("LaundryServiceId");

                    b.ToTable("orderdetails", (string)null);
                });

            modelBuilder.Entity("WashUpAPIFix.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("paymentid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("LaundryOrderId")
                        .HasColumnType("integer")
                        .HasColumnName("laundryorderid");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("paidat");

                    b.Property<string>("PaymentProofUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("paymentproofurl");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status");

                    b.HasKey("PaymentId");

                    b.HasIndex("LaundryOrderId")
                        .IsUnique();

                    b.ToTable("payments", (string)null);
                });

            modelBuilder.Entity("WashUpAPIFix.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ratingid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RatingId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("comment");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ratedat");

                    b.Property<int>("Score")
                        .HasColumnType("integer")
                        .HasColumnName("score");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("RatingId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("ratings", (string)null);
                });

            modelBuilder.Entity("WashUpAPIFix.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userid"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("passwordhash");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("role");

                    b.HasKey("userid");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("WashUpAPIFix.Models.LaundryOrder", b =>
                {
                    b.HasOne("WashUpAPIFix.Models.User", "Courier")
                        .WithMany("Deliveries")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WashUpAPIFix.Models.LaundryService", "LaundryService")
                        .WithMany("LaundryOrders")
                        .HasForeignKey("LaundryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WashUpAPIFix.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Courier");

                    b.Navigation("LaundryService");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WashUpAPIFix.Models.OrderDetail", b =>
                {
                    b.HasOne("WashUpAPIFix.Models.LaundryOrder", "LaundryOrder")
                        .WithMany("OrderDetails")
                        .HasForeignKey("LaundryOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WashUpAPIFix.Models.LaundryService", "LaundryService")
                        .WithMany("OrderDetails")
                        .HasForeignKey("LaundryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaundryOrder");

                    b.Navigation("LaundryService");
                });

            modelBuilder.Entity("WashUpAPIFix.Models.Payment", b =>
                {
                    b.HasOne("WashUpAPIFix.Models.LaundryOrder", "LaundryOrder")
                        .WithOne("Payment")
                        .HasForeignKey("WashUpAPIFix.Models.Payment", "LaundryOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaundryOrder");
                });

            modelBuilder.Entity("WashUpAPIFix.Models.Rating", b =>
                {
                    b.HasOne("WashUpAPIFix.Models.LaundryOrder", "LaundryOrder")
                        .WithOne("Rating")
                        .HasForeignKey("WashUpAPIFix.Models.Rating", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WashUpAPIFix.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaundryOrder");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WashUpAPIFix.Models.LaundryOrder", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payment");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("WashUpAPIFix.Models.LaundryService", b =>
                {
                    b.Navigation("LaundryOrders");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("WashUpAPIFix.Models.User", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
